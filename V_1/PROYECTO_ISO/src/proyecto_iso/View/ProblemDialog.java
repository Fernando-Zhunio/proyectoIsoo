/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_iso.View;

import JTableModelo.ModeloJTable;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import proyecto_iso.Validaciones;

/**
 *
 * @author FZ1891
 */
public class ProblemDialog extends javax.swing.JDialog {

    /**
     * Creates new form ProblemDialog
     */
    
    int rowNum=0;
    int columnNum=0;
    JTable tbProblem;
    DefaultTableModel dtmProblem;
    DefaultTableModel dtmSolution;
    
    DefaultTableModel dtmSolutionPerfect;
    boolean isSolution=false;
    boolean isProblem=false;
    boolean isSolucionPerfect=false;
    boolean isModifyProblem=false;
    boolean isModifySolution=false;
    boolean isModifySolucionPerfect=false;
    
    public ProblemDialog(java.awt.Frame parent, boolean modal
            ,JTable tbProblem,ModeloJTable dtmProblem 
            ,JTable tbsolution, ModeloJTable dtmSolucion
            ,ModeloJTable dtmSolucionPerfect) {
        super(parent, modal);
        this.setLocationRelativeTo(null);
        this.tbProblem=tbProblem;
        this.dtmProblem=dtmProblem;
        this.dtmSolution=dtmSolucion;
        this.dtmSolutionPerfect=dtmSolucionPerfect;
        
        initComponents();
    }
    
    
    
      public void iniciarFrameProblem(int rowNum)
    {   
        this.remove(btnEliminar);
        isProblem=true;
        this.setLocationRelativeTo(null);
        //this.rowNum=rowNum;
      //  String numRow=String.valueOf(this.rowNum);     
        lbProblemNum.setText("Descripción Problema N°"+rowNum);  
        this.setVisible(true);      
    } 
     public void iniciarFrameSolucion(int rowNum)
    {   
        this.remove(btnEliminar);
        isSolution=true;
        this.setLocationRelativeTo(null);
        //this.rowNum=rowNum;
        //String numRow=String.valueOf(this.rowNum);     
        lbProblemNum.setText("Descripción Solución N°"+rowNum);  
        this.setVisible(true);      
    }
     
      public void iniciarFrameSolucionPerfect(int rowNum)
    {   
        this.remove(btnEliminar);
        isSolucionPerfect=true;
        this.setLocationRelativeTo(null);
        //this.rowNum=rowNum;
        //String numRow=String.valueOf(this.rowNum);     
        lbProblemNum.setText("Descripción Solución N°"+rowNum);  
        this.setVisible(true);      
    }
    
    public void modifyProblem(int rowNum,String dataRow)
    {
        this.add(btnEliminar);
        isModifyProblem=true;
        this.setLocationRelativeTo(null);
        this.rowNum=rowNum;
      
        lbProblemNum.setText("Modifica Problema N°"+(rowNum+1));
        txtADescripcionProblem.setText(dataRow);
        this.setVisible(true);
    }
    
      public void modifySolution(int rowNum,String dataRow)
    {
        this.add(btnEliminar);
        isModifySolution=true;
        this.setLocationRelativeTo(null);
        this.rowNum=rowNum;     
        lbProblemNum.setText("Modifica Soluciòn N°"+(rowNum+1));
        txtADescripcionProblem.setText(dataRow);
        this.setVisible(true);
    }
      
        public void modifySolutionPerfect(int rowNum,String dataRow)
    {
        this.add(btnEliminar);
        isModifySolucionPerfect=true;
        this.setLocationRelativeTo(null);
        this.rowNum=rowNum;     
        lbProblemNum.setText("Modifica Soluciòn N°"+(rowNum+1));
        txtADescripcionProblem.setText(dataRow);
        this.setVisible(true);
    }
      
    
    
    
    
    
    
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSPanelGradiente1 = new rspanelgradiente.RSPanelGradiente();
        lbProblemNum = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtADescripcionProblem = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbProblemNum.setFont(new java.awt.Font("Calibri Light", 0, 36)); // NOI18N
        lbProblemNum.setForeground(new java.awt.Color(255, 255, 255));
        lbProblemNum.setText("jLabel1");

        javax.swing.GroupLayout rSPanelGradiente1Layout = new javax.swing.GroupLayout(rSPanelGradiente1);
        rSPanelGradiente1.setLayout(rSPanelGradiente1Layout);
        rSPanelGradiente1Layout.setHorizontalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbProblemNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        rSPanelGradiente1Layout.setVerticalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelGradiente1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lbProblemNum, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        txtADescripcionProblem.setColumns(20);
        txtADescripcionProblem.setRows(5);
        jScrollPane1.setViewportView(txtADescripcionProblem);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
        );

        jButton1.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jButton2.setText("Aceptar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(47, 47, 47)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         txtADescripcionProblem.setText(null);
         this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
       Validaciones validar=new Validaciones();
       
    if(validar.ValidarTxtAreadNotNull(txtADescripcionProblem))
    {   
      if(isSolution)
        {        
           int numColum= dtmSolution.getRowCount()+1;
           String dataRow=txtADescripcionProblem.getText();
           String numColuma=String.valueOf(numColum);
           Object[] dataForTable={dataRow};  
           txtADescripcionProblem.setText(null);
           isSolution=false;
           this.setVisible(false);
           dtmSolution.addRow(dataForTable); 
       
         }     
      else if(isProblem)
         {   
                       
           int numColum= dtmProblem.getRowCount()+1;
           String dataRow=txtADescripcionProblem.getText();
           String numColuma=String.valueOf(numColum);
           Object[] dataForTable={dataRow};  
           txtADescripcionProblem.setText(null);
           isProblem=false;
           this.setVisible(false);
           dtmProblem.addRow(dataForTable); 
          }
       else if(isSolucionPerfect)
         {   
                       
           int numColum= dtmSolutionPerfect.getRowCount()+1;
           String dataRow=txtADescripcionProblem.getText();
           String numColuma=String.valueOf(numColum);
           Object[] dataForTable={dataRow};  
           txtADescripcionProblem.setText(null);
           isModifySolucionPerfect=false;
           this.setVisible(false);
           dtmSolutionPerfect.addRow(dataForTable); 
          }
        else if(isModifySolucionPerfect)
          {         
           String dataRow=txtADescripcionProblem.getText();          
           
           dtmSolutionPerfect.setValueAt(dataRow, rowNum,0);
           txtADescripcionProblem.setText(null);
           isModifySolucionPerfect=false;
           this.setVisible(false);     
          }
      else if(isModifySolution)
          {         
           String dataRow=txtADescripcionProblem.getText();          
           
           dtmSolution.setValueAt(dataRow, rowNum,0);
           txtADescripcionProblem.setText(null);
           isModifySolution=false;
           this.setVisible(false);
          
          }
       else if(isModifyProblem)
          {         
           String dataRow=txtADescripcionProblem.getText();          
          
           dtmProblem.setValueAt(dataRow, rowNum,0);
           txtADescripcionProblem.setText(null);
           isModifyProblem=false;
           this.setVisible(false);     
          }
      
    }
    else
        JOptionPane.showMessageDialog(null, "El dato a guardar o esta en hablaco o es null");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
        if(isModifyProblem)
        {
          dtmProblem.removeRow(rowNum);
          txtADescripcionProblem.setText(null);
          isModifyProblem=false;
          this.setVisible(false);
        }
        else if(isModifySolution)
        {
          dtmSolution.removeRow(rowNum);
          txtADescripcionProblem.setText(null);
          isModifySolution=false;
          this.setVisible(false); 
        }
         else if(isModifySolucionPerfect)
        {
          dtmSolutionPerfect.removeRow(rowNum);
          txtADescripcionProblem.setText(null);
          isModifySolucionPerfect=false;
          this.setVisible(false); 
        }
     
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ProblemDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ProblemDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ProblemDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ProblemDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                ProblemDialog dialog = new ProblemDialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbProblemNum;
    private rspanelgradiente.RSPanelGradiente rSPanelGradiente1;
    private javax.swing.JTextArea txtADescripcionProblem;
    // End of variables declaration//GEN-END:variables
}
